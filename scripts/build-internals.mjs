import { typecheck } from './typecheck.mjs'
import esbuild from 'esbuild'
import process from 'process'
import path from 'path'
import fs from 'fs'

typecheck('api/app/tsconfig.json')
typecheck('api/style/tsconfig.json')
typecheck('api/dom/tsconfig.json')

const outdir = './out/internals'

console.log(`Building to directory: ${outdir}\n`)

fs.mkdirSync(outdir, { recursive: true })
fs.copyFileSync('./api/internals/sheet.html', path.join(outdir, 'sheet.html'))
fs.copyFileSync('./api/internals/inspector.html', path.join(outdir, 'inspector.html'))

const prod = process.argv[2] === 'production'
const sourcemap = prod ? 'external' : 'inline'
const context = await esbuild.context({
  banner: { js: '// GENERATED BY ESBUILD' },
  target: 'esnext',
  entryPoints: ['./api/internals/common', './api/internals/sheet', './api/internals/inspector'],
  external: ['bike/dom'],
  format: 'iife',
  logLevel: 'info',
  sourcemap: sourcemap,
  outdir: outdir,
  bundle: true,
  minify: prod,
  keepNames: true,
})

if (prod) {
  await context.rebuild()
  process.exit(0)
} else {
  await context.watch()
}
